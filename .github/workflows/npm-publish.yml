# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Publish a release

on:
  push:
    tags:
      - v* #version is cut

jobs:
  build-release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: package/graphql-azure-servicebus-subscriptions
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Build
        run: |
          npm ci
          npm run lint
          npm run build
      
      - name: Test
        run: |
          npm ci
          npm run test
          
      - name: Package
        run: |
          # npm version prerelease --preid-ci-$GITHUB_RUN_ID --no-git-tag-version
          npm pack
      
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: package-azureservicebus
          path: "package/graphql-azure-servicebus-subscriptions/*.tgz"


  
  build:
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - run: echo "tag=${GITHUB_REF##*/v}" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref}}
          draft: true
          prerelease: false
          body: |
            Check the changelog: https://github.com/abdomohamed/packages/graphql-azure-servicebus-subscriptions/blob/main/CHANGELOG.md

      - name: Download (AzureServiceBus)
        uses: actions/download-artifact@v2
        with:
          name: package-azureservicebus

      - name: Upload package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: "abdomohamed-graphql-azure-servicebus-subscriptions-${{ env.tag }}.tgz"
          asset_name: "@abdomohamed/graphql-azure-servicebus-subscriptions-${{ env.tag }}.tgz"
          asset_content_type: application/zip
  
      - run: echo ${{ steps.create_release.outputs.id }} >> release.txt
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: release_id
          path: release.txt

  release:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: release
    steps:
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: release_id
      - run: echo "release_id=$(cat release.txt)" >> $GITHUB_ENV
      - name: Publish release
        uses: actions/github-script@v3
        with:
          github-token: ${{  github.token }}
          script: |
            github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false
            })
  
  publish-npm:
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Download (AzureServiceBus)
        uses: actions/download-artifact@v2
        with:
          name: package-azureservicebus
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
          scope: "@talema"
      - run: npm publish $(ls *servicebus*.tgz) --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
  
  # publish-github:
  #   name: "Publish to GitHub packages"
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download (AzureServiceBus)
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: package-azureservicebus
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #         scope: "@abdomohamed"
  #         registry-url: https://npm.pkg.github.com
  #     - run: echo "registry=https://npm.pkg.github.com/@abdomohamed" >> .npmrc
  #     - run: npm publish $(ls *servicebus*.tgz) --access public
  #       env:
  #         NODE_AUTH_TOKEN: ${{ github.token }} 